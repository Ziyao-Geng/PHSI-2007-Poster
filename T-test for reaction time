---
title: "PHSI 2007 Report"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Statistical Test for the reaction time data
```{r}
# input data and calculate the mean and standard deviation for each dataset

# random visual
Random_Visual = c(637, 528, 537, 548, 454, 815, 607, 587, 573, 732, 
                948, 422, 538, 462, 578)
Random_Visual.mean = mean(Random_Visual)
Random_Visual.sd = sd(Random_Visual)

# distracted visual
Distracted_Visual = c(636, 514, 494, 608, 825, 586, 710, 1050, 1090, 1570, 
                    566, 602, 382, 742, 542)
Distracted_Visual.mean = mean(Distracted_Visual)
Distracted_Visual.sd = sd(Distracted_Visual)

# prompted_visual  
Prompted_Visual = c(354, 492, 446, 353, 537, 998, 666, 568, 690, 592, 
                  672, 182, 462, 586, 602)
Prompted_Visual.mean = mean(Prompted_Visual)
Prompted_Visual.sd = sd(Prompted_Visual)

# regular visual
Regular_Visual = c(399, 450, 185, 248, 367, 676, 692, 580, 564, 508, 
                218, 212, 202, 202, 282)
Regular_Visual.mean = mean(Regular_Visual)
Regular_Visual.sd = sd(Regular_Visual)

# auditory  
Auditory = c(213, 115, 110, 128, 139, 482, 174, 324, 236, 146, 
          278, 182, 142, 162, 182)
Auditory.mean = mean(Auditory)
Auditory.sd = sd(Auditory)

# set t.test with alternative as less
t_test1 <- t.test(Random_Visual, Distracted_Visual, alternative = "less")
p1 <- round(t_test1$p.value,3)

# set t.test with alternative as greater
t_test2 <- t.test(Random_Visual, Prompted_Visual, alternative = "greater")
p2 <- round(t_test2$p.value,3)

# set t.test with alternative as greater
t_test3 <- t.test(Random_Visual, Regular_Visual, alternative = "greater")
p3 <- round(t_test3$p.value,3)

# set t.test with alternative as greater
t_test4 <- t.test(Random_Visual, Auditory, alternative = "greater")
p4 <- round(t_test4$p.value,5)
```


## One-tailed T-test for Random Visual and Distracted Visual:
```{r, echo=FALSE}
print(t_test1)
```

## One-tailed T-test for Random Visual and Prompted Visual:
```{r, echo=FALSE}
print(t_test2)
```

## One-tailed T-test for Random Visual and Regular Visual:
```{r, echo=FALSE}
print(t_test3)
```

## One-tailed T-test for Random Visual and Auditory:
```{r, echo=FALSE}
print(t_test4)
```

# Display Table
```{r, echo=TRUE}
# table 1
test1_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Distracted_Visual.mean),
  Column3 = c(Random_Visual.sd, Distracted_Visual.sd),
  Column4 = c(p1, " ")
)

row.names(test1_table) <- c("Random Visual", "Distracted Visual")

knitr::kable(test1_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 2
test2_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Prompted_Visual.mean),
  Column3 = c(Random_Visual.sd, Prompted_Visual.sd),
  Column4 = c(p2, " ")
)

row.names(test2_table) <- c("Random Visual", "Prompted Visual")

knitr::kable(test2_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 3
test3_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Regular_Visual.mean),
  Column3 = c(Random_Visual.sd, Regular_Visual.sd),
  Column4 = c(p3, " ")
)

row.names(test3_table) <- c("Random Visual", "Regular Visual")

knitr::kable(test3_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 4
test4_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Auditory.mean),
  Column3 = c(Random_Visual.sd, Auditory.sd),
  Column4 = c(p4, " ")
)

row.names(test4_table) <- c("Random Visual", "Auditory")

knitr::kable(test4_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))
```

Hence, the one-tailed t-test indicates that there is a significant difference, with $p \leq 0.05$, between two groups: random visual and regular visual, random visual and auditory.

# Graph
```{r}
se_random_visual <- sd(Random_Visual) / sqrt(length(Random_Visual))
se_regular_visual <- sd(Regular_Visual) / sqrt(length(Regular_Visual))

# Load ggplot2 package
library(ggplot2)

# Create a data frame with the group data
df1 <- data.frame(
  group = c("Random Visual", "Regular Visual"),
  value = c(Random_Visual.mean, Regular_Visual.mean),
  sd = c(se_random_visual, se_regular_visual)
)

# Create a bar plot with error bars using ggplot2
plot1 <- ggplot(df, aes(x = group, y = value, fill = group)) +
  geom_bar(stat = "identity", width = 0.4) +
  geom_errorbar(aes(ymin = value - sd, ymax = value + sd), width = 0.2, color = "black", size = 0.8) +
  labs(x = "Type of distraction", y = "Mean Value", title = "Bar Plot with Error Bars") +
  scale_fill_manual(values = c("Random Visual" = "red", "Regular Visual" = "blue")) +
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.title = element_text(hjust = 0.5),
    axis.title.y = element_text(vjust = 0.5, hjust = 0.5)
  ) +
  geom_text(aes(x = 1.5, y = max(df$value) + 0.1, label = "p = 0.001"), size = 4)

se_random_visual <- sd(Random_Visual) / sqrt(length(Random_Visual))
se_regular_visual <- sd(Regular_Visual) / sqrt(length(Regular_Visual))

plot1_means <- c(Random_Visual.mean, Regular_Visual.mean)
plot1_se <- c(se_random_visual, se_regular_visual)

# Load ggplot2 package
library(ggplot2)

# Create a data frame with the group data
df1 <- data.frame(
  group = c("Random Visual", "Regular Visual"),
  value = c(Random_Visual.mean, Regular_Visual.mean),
  sd = c(se_random_visual, se_regular_visual)
)

# Create a bar plot with error bars using ggplot2
ggplot(df, aes(x = group, y = value, fill = group)) +
  geom_bar(stat = "identity", width = 0.4) +
  geom_errorbar(aes(ymin = value - sd, ymax = value + sd), width = 0.2, color = "black", size = 0.8) +
  labs(x = "Type of distraction", y = "Mean Value", title = "Bar Plot with Error Bars") +
  scale_fill_manual(values = c("Random Visual" = "red", "Regular Visual" = "blue")) +
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.title = element_text(hjust = 0.5),
    axis.title.y = element_text(vjust = 0.5, hjust = 0.5)
  ) +
  geom_text(aes(x = 1.5, y = max(value) + 0.1, label = "p = 0.001"), size = 4)
```


