---
title: "PHSI 2007 Report"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Statistical Test for the reaction time data
```{r}
# input data and calculate the mean and standard deviation for each dataset

# random visual
Random_Visual = c(637, 528, 537, 548, 454, 815, 607, 587, 573, 732, 948, 422, 538, 462, 578)
Random_Visual.mean = mean(Random_Visual)
Random_Visual.sd = sd(Random_Visual)

# distracted visual
Distracted_Visual = c(636, 514, 494, 608, 825, 586, 710, 1050, 1090, 1570, 
                    566, 602, 382, 742, 542)
Distracted_Visual.mean = mean(Distracted_Visual)
Distracted_Visual.sd = sd(Distracted_Visual)

# prompted_visual  
Prompted_Visual = c(354, 492, 446, 353, 537, 998, 666, 568, 690, 592, 
                  672, 182, 462, 586, 602)
Prompted_Visual.mean = mean(Prompted_Visual)
Prompted_Visual.sd = sd(Prompted_Visual)

# regular visual
Regular_Visual = c(399, 450, 185, 248, 367, 676, 692, 580, 564, 508, 218, 212, 202, 202, 282)
Regular_Visual.mean = mean(Regular_Visual)
Regular_Visual.sd = sd(Regular_Visual)

# auditory  
Auditory = c(213, 115, 110, 128, 139, 482, 174, 324, 236, 146, 
          278, 182, 142, 162, 182)
Auditory.mean = mean(Auditory)
Auditory.sd = sd(Auditory)

# set t.test with alternative as less
t_test1 <- t.test(Random_Visual, Distracted_Visual, alternative = "less", paired = TRUE)
p1 <- round(t_test1$p.value,5)

# set t.test with alternative as greater
t_test2 <- t.test(Random_Visual, Prompted_Visual, alternative = "greater", paired = TRUE)
p2 <- round(t_test2$p.value,5)

# set t.test with alternative as greater
t_test3 <- t.test(Random_Visual, Regular_Visual, alternative = "greater", paired = TRUE)
p3 <- round(t_test3$p.value,5)

# set t.test with alternative as greater
t_test4 <- t.test(Random_Visual, Auditory, alternative = "greater", paired = TRUE)
p4 <- round(t_test4$p.value,10)
```

# Data summary
```{r}
summary_table <- data.frame(
  Column1 = c(round(Random_Visual.mean, digits = 2), round(Distracted_Visual.mean, digits = 2), round(Prompted_Visual.mean, digits = 2), round(Regular_Visual.mean, digits = 2), round(Auditory.mean, digits = 2)),
  Column2 = c(round(Random_Visual.sd, digits = 2), round(Distracted_Visual.sd, digits = 2), round(Prompted_Visual.sd, digits = 2), round(Regular_Visual.sd, digits = 2), round(Auditory.sd, digits = 2))
)

row.names(summary_table) <- c("Reaction times to random visual cues \n---------------------------------------------", "Reaction times when distracted by performing arithmetic task \n---------------------------------------------", "Reaction times with a sound prompt of “ready” before a visual cue \n---------------------------------------------", "Reaction times by regular visual cues through regular rhythm \n---------------------------------------------", "Auditory cue of tapping the bench \n---------------------------------------------")

knitr::kable(summary_table, row.names = TRUE, 
col.names = c("Mean (ms)", "SD  (ms)"))
```



## One-tailed Paired T-test for Random Visual and Distracted Visual:
```{r, echo=FALSE}
print(t_test1)
```

## One-tailed Paired T-test for Random Visual and Prompted Visual:
```{r, echo=FALSE}
print(t_test2)
```

## One-tailed Paired T-test for Random Visual and Regular Visual:
```{r, echo=FALSE}
print(t_test3)
```

## One-tailed Paired T-test for Random Visual and Auditory:
```{r, echo=FALSE}
print(t_test4)
```

# Display Table
```{r, echo=TRUE}
# table 1
test1_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Distracted_Visual.mean),
  Column3 = c(Random_Visual.sd, Distracted_Visual.sd),
  Column4 = c(p1, " ")
)

row.names(test1_table) <- c("Random Visual", "Distracted Visual")

knitr::kable(test1_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 2
test2_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Prompted_Visual.mean),
  Column3 = c(Random_Visual.sd, Prompted_Visual.sd),
  Column4 = c(p2, " ")
)

row.names(test2_table) <- c("Random Visual", "Prompted Visual")

knitr::kable(test2_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 3
test3_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Regular_Visual.mean),
  Column3 = c(Random_Visual.sd, Regular_Visual.sd),
  Column4 = c(p3, " ")
)

row.names(test3_table) <- c("Random Visual", "Regular Visual")

knitr::kable(test3_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))

# table 4
test4_table <- data.frame(
  Column1 = c(15, 15),
  Column2 = c(Random_Visual.mean, Auditory.mean),
  Column3 = c(Random_Visual.sd, Auditory.sd),
  Column4 = c(p4, " ")
)

row.names(test4_table) <- c("Random Visual", "Auditory")

knitr::kable(test4_table, row.names = TRUE, 
col.names = c("Number of tests","Mean Value (ms)", "Standard Deviation", "P-value"))
```

Hence, the one-tailed t-test indicates that there is a significant difference, with $p \leq 0.05$, between two groups: random visual and regular visual, random visual and auditory.

# Graphs
# Graph
```{r}
# import ggplot2
library(ggplot2)
library(gridExtra)

# create dataframe
df1 <- data.frame(
  Group1 = c("Random \nVisual", "Regular \nVisual"),
  value1 = c(Random_Visual.mean, Regular_Visual.mean),
  sd1 = c(Random_Visual.sd, Regular_Visual.sd)
)

# plot 1
# Create a bar plot with error bars using ggplot2
plot1 <- ggplot(df1, aes(x = Group1, y = value1, fill = Group1)) +
    geom_bar(stat = "identity", width = 0.4) +
    geom_errorbar(aes(ymin = value1 - sd1, ymax = value1 + sd1), width = 0.2, color = "black", linewidth = 0.8) +
    labs(x = "Types of Distraction", y = "Mean Reaction Time (ms)", title = "One-tailed Paired T-test between \nRandom Visual and Regular Visual", fill = "Legend") +
    scale_fill_manual(values = c("Random \nVisual" = "lightblue", "Regular \nVisual" = "pink")) +
    theme_minimal() +
    theme(
      axis.line = element_line(),
      plot.title = element_text(hjust = 0.5, size = 9),
      axis.title.y = element_text(vjust = 0.5, hjust = 0.5, size = 8),
      axis.title.x = element_text(size = 8),
      axis.text.x = element_text(size = 8),
      panel.grid = element_blank()
    ) +
  geom_text(aes(x = 1.5, y = max(df1$value) + 100, label = "    p = 0.00043 \n(p < 0.05)"), size = 2.5)

# plot 2
df2 <- data.frame(
  Group2 = c("Random \nVisual", "Prompted \nVisual"),
  value2 = c(Random_Visual.mean, Prompted_Visual.mean),
  sd2 = c(Random_Visual.sd, Prompted_Visual.sd)
)


# Create a bar plot with error bars using ggplot2
plot2 <- ggplot(df2, aes(x = Group2, y = value2, fill = Group2)) +
  geom_bar(stat = "identity", width = 0.4, position = position_dodge2(reverse = TRUE)) +
  geom_errorbar(aes(ymin = value2 - sd2, ymax = value2 + sd2), width = 0.2, color = "black", size = 0.8, position = position_dodge2(reverse = TRUE)) +
  labs(x = "Types of Distraction", y = "Mean Reaction Time (ms)", title = "One-tailed Paired T-test between \nRandom Visual and Prompted Visual", fill = "Legend") +
  scale_fill_manual(values = c("Random \nVisual" = "lightblue", "Prompted \nVisual" = "pink")) +
  theme_minimal() +
  theme(
      axis.line = element_line(),
      plot.title = element_text(hjust = 0.5, size = 9),
      axis.title.y = element_text(vjust = 0.5, hjust = 0.5, size = 8),
      axis.title.x = element_text(size = 8),
      axis.text.x = element_text(size = 8),
      panel.grid = element_blank(),
    ) +
  geom_text(aes(x = 1.5, y = max(df2$value) + 100, label = "  p = 0.10647 \n(p > 0.05)"), size = 2.5)

# plot 3
df3 <- data.frame(
  Group3 = c("Random \nVisual", "Distracted"),
  value3 = c(Random_Visual.mean, Distracted_Visual.mean),
  sd3 = c(Random_Visual.sd, Distracted_Visual.sd)
)

# Create a bar plot with error bars using ggplot2
plot3 <- ggplot(df3, aes(x = Group3, y = value3, fill = Group3)) +
  geom_bar(stat = "identity", width = 0.4, position = position_dodge2(reverse = TRUE)) +
  geom_errorbar(aes(ymin = value3 - sd3, ymax = value3 + sd3), width = 0.2, color = "black", size = 0.8, position = position_dodge2(reverse = TRUE)) +
  labs(x = "Types of Distraction", y = "Mean Reaction Time (ms)", title = "One-tailed Paired T-test between \nRandom Visual and Distracted", fill = "Legend") +
  scale_fill_manual(values = c("Random \nVisual" = "lightblue", "Distracted" = "pink")) +
  theme_minimal() +
  theme(
      axis.line = element_line(),
      plot.title = element_text(hjust = 0.5, size = 9),
      axis.title.y = element_text(vjust = 0.5, hjust = 0.5, size = 8),
      axis.title.x = element_text(size = 8),
      axis.text.x = element_text(size = 8),
      panel.grid = element_blank()
    ) +
  geom_text(aes(x = 1.5, y = max(df3$value) + 145, label = "  p = 0.06794 \n(p > 0.05)"), size = 2.5)



# plot 4
df4 <- data.frame(
  Group4 = c("Random \nVisual", "Auditory"),
  value4 = c(Random_Visual.mean, Auditory.mean),
  sd4 = c(Random_Visual.sd, Auditory.sd)
)

# Create a bar plot with error bars using ggplot2
plot4 <- ggplot(df4, aes(x = Group4, y = value4, fill = Group4)) +
  geom_bar(stat = "identity", width = 0.4, position = position_dodge2(reverse = TRUE)) +
  geom_errorbar(aes(ymin = value4 - sd4, ymax = value4 + sd4), width = 0.2, color = "black", size = 0.8, position = position_dodge2(reverse = TRUE)) +
  labs(x = "Types of Distraction", y = "Mean Reaction Time (ms)", title = "One-tailed Paired T-test between \nRandom Visual and Auditory", fill = "Legend") +
  scale_fill_manual(values = c("Random \nVisual" = "lightblue", "Auditory" = "pink")) +
  theme_minimal() +
  theme(
      axis.line = element_line(),
      plot.title = element_text(hjust = 0.5, size = 9),
      axis.title.y = element_text(vjust = 0.5, hjust = 0.5, size = 8),
      axis.title.x = element_text(size = 8),
      axis.text.x = element_text(size = 8),
      panel.grid = element_blank()
    ) +
  geom_text(aes(x = 1.5, y = max(df4$value) + 100, label = "p = 1e-09 \n (p < 0.05)"), size = 2.5)

grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)

```
